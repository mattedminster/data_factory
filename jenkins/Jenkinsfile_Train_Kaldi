pipeline {
    agent{
           docker { image 'data_factory' 
           args '-v /home/robot/data_factory/youtube_downloads:/youtube_downloads:rw -v /home/robot/data_factory/egs:/opt/kaldi/egs:rw '}
    }
    // parameters {
    //     string(name: 'target_saying', defaultValue: 'turn off the lights', description: 'What phrase do you want to collect more data for?')
    //     string(name: 'search_term', defaultValue: 'turn off the lights smart home', description: 'What search terms should we use to collect data?')
    //     string(name: 'num_of_samples', defaultValue: '3', description: 'How many do you want to collect?')
    //     string(name: 'max_searches', defaultValue: '50', description: 'Whats the max amount of videos we should search?')
    // }

    stages {
        stage('Generate Files') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && python3 generate_files.py"
            }
        }
        stage('Cut') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && ./cut.sh"
            }
        }
        stage('Filter Lexicon') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && python3 filter_dict.py"
            }
        }
        stage('Generate spk2utt') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && utils/fix_data_dir.sh data/train"
            }
        }
        stage('Nonsilence Phones') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe/data/local/lang && ./nonsilence_phones.sh"
            }
        }
        stage('Optional Silence') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe/data/local/lang && ./optional_silence.sh"
            }
        }
        stage('Create data/lang') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && ./prepare_lang.sh"
            }
        }
        stage('Extract MFCC') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && ./extract_mffc.sh"
            }
        }
        stage('Monophone Training') {
            steps {
                sh "cd /opt/kaldi/egs/horseshoe && ./monophone_training.sh"
            }
        }
    }
}